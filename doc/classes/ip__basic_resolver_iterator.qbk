[section:ip__basic_resolver_iterator Class template [^ip::basic_resolver_iterator]]

  namespace std {
    namespace experimental {
      __begin_versioned_ns__
        namespace ip {

          template<class InternetProtocol>
          class basic_resolver_iterator
          {
          public:
            // types:
            typedef basic_resolver_entry<InternetProtocol> value_type;
            typedef ptrdiff_t difference_type;
            typedef const basic_resolver_entry<InternetProtocol>* pointer;
            typedef const basic_resolver_entry<InternetProtocol>& reference;
            typedef forward_iterator_tag iterator_category;
            typedef InternetProtocol protocol_type;
            typedef typename InternetProtocol::endpoint endpoint_type;

            // constructors:
            basic_resolver_iterator();

            // other members as required by C++ Std [forward.iterators]
          };

        } // namespace ip
      __end_versioned_ns__
    } // namespace experimental
  } // namespace std

[section [^ip::basic_resolver_iterator] constructors]

  basic_resolver_iterator();

[function_effects Initializes an object of class
`basic_resolver_iterator<InternetProtocol>` so that it represents an end
iterator.]

[endsect]

[endsect]
