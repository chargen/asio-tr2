[section:socket_base__send_buffer_size Class [^socket_base::send_buffer_size]]

The `send_buffer_size` class represents a socket option for specifying the
size of the send buffer associated with a socket.

`send_buffer_size` satisfies the requirements for `CopyConstructible`,
`Assignable`, [link requirements.gettable_socket_option
`GettableSocketOption`], and [link requirements.settable_socket_option
`SettableSocketOption`].

  namespace std {
    namespace tr2 {
      namespace sys {

        class socket_base::send_buffer_size
        {
        public:
          send_buffer_size();
          explicit send_buffer_size(int v);
          send_buffer_size& operator=(int v);

          int value() const;
        };

      } // namespace sys
    } // namespace tr2
  } // namespace std

__POSIX__ implementations must provide the following member functions:

  namespace std {
    namespace tr2 {
      namespace sys {

        class send_buffer_size
        {
        public:
          template<class Protocol> int level(const Protocol& p) const;
          template<class Protocol> int name(const Protocol& p) const;
          template<class Protocol> ``['unspecified]``* data(const Protocol& p);
          template<class Protocol> const ``['unspecified]``* data(const Protocol& p) const;
          template<class Protocol> size_t size(const Protocol& p) const;
          template<class Protocol> void resize(const Protocol& p, size_t s);
          ``['[*// remainder unchanged]]``
        private:
  ``//      int value_;  ['[*exposition only]]``
        };

      } // namespace sys
    } // namespace tr2
  } // namespace std

[section [^socket_base::send_buffer_size] members]

  send_buffer_size();

[function_postconditions `value() == 0`.]

  explicit send_buffer_size(int v);

[function_postconditions `value() == v`.]

  send_buffer_size& operator=(int v);

[function_returns `*this`.]

[function_postconditions `value() == v`.]

  int value() const;

[function_returns The stored socket option value. For __POSIX__
implementations, returns `value_`.]

[endsect]

[section [^socket_base::send_buffer_size] __POSIX__ members]

  template<class Protocol> int level(const Protocol& p) const;

[function_returns `SOL_SOCKET`.]

[function_note The constant `SOL_SOCKET` is defined in the __POSIX__ header
file __sys_socket_h__.]

  template<class Protocol> int name(const Protocol& p) const;

[function_returns `SO_SNDBUF`.]

[function_note The constant `SO_SNDBUF` is defined in the __POSIX__ header file
__sys_socket_h__.]

  template<class Protocol> int* data(const Protocol& p) const;

[function_returns `&value_`.]

  template<class Protocol> const int* data(const Protocol& p) const;

[function_returns `&value_`.]

  template<class Protocol> size_t size(const Protocol& p) const;

[function_returns `sizeof(value_)`.]

  template<class Protocol> void resize(const Protocol& p, size_t s);

[function_throws `length_error` if `s != sizeof(value_)`.]
  
[endsect]

[endsect]
