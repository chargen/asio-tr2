[section:ip__basic_resolver_entry Class template [^ip::basic_resolver_entry]]

  namespace std {
    namespace experimental {
      inline namespace network_v1 {
        namespace ip {

          template<class InternetProtocol>
          class basic_resolver_entry
          {
          public:
            // types:
            typedef InternetProtocol protocol_type;
            typedef typename InternetProtocol::endpoint endpoint_type;

            // constructors:
            basic_resolver_entry();
            basic_resolver_entry(const endpoint_type& ep, const string& h,
                                 const string& s);

            // members:
            endpoint_type endpoint() const;
            operator endpoint_type() const;
            string host_name() const;
            string service_name() const;
          };

        } // namespace ip
      } // inline namespace network_v1
    } // namespace experimental
  } // namespace std

[section [^ip::basic_resolver_entry] constructors]

  basic_resolver_entry();

[function_effects Constructs an object of class
`basic_resolver_entry<InternetProtocol>`.]

[function_postconditions The postconditions of this function are indicated in
the table below.]

[table basic_resolver_entry<InternetProtocol>::basic_resolver_entry() effects
  [[expression][value]]
  [
    [`endpoint()`]
    [`basic_endpoint<InternetProtocol>()`]
  ]
  [
    [`host_name()`]
    [`string()`]
  ]
  [
    [`service_name()`]
    [`string()`]
  ]
]

  basic_resolver_entry(const endpoint_type& ep, const string& h,
                       const string& s);

[function_effects Constructs an object of class
`basic_resolver_entry<InternetProtocol>` with the specified endpoint, host name
and service name.]

[function_postconditions The postconditions of this function are indicated in
the table below.]

[table basic_resolver_entry<InternetProtocol>::basic_resolver_entry() effects
  [[expression][value]]
  [
    [`endpoint()`]
    [`ep`]
  ]
  [
    [`host_name()`]
    [`h`]
  ]
  [
    [`service_name()`]
    [`s`]
  ]
]

[endsect]

[section [^ip::basic_resolver_entry] members]

  endpoint_type endpoint() const;

[function_returns The endpoint associated with the resolver entry.]

  operator endpoint_type() const;

[function_returns `endpoint()`.]

  string host_name() const;

[function_returns The host name associated with the resolver entry.]

  string service_name() const;

[function_returns The service name associated with the resolver entry.]

[endsect]

[endsect]
