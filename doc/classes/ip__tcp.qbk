[section:ip__tcp Class [^ip::tcp]]

  namespace std {
    namespace tr2 {
      namespace sys {
        namespace ip {

          class tcp
          {
          public:
            // types:
            typedef basic_endpoint<tcp> endpoint;
            typedef basic_resolver_query<tcp> resolver_query;
            typedef basic_resolver_iterator<tcp> resolver_iterator;
            typedef basic_resolver<tcp> resolver;
            typedef basic_stream_socket<tcp> socket;
            typedef basic_socket_acceptor<tcp> acceptor;
            typedef basic_socket_iostream<tcp> iostream;
            class no_delay;

            // members:
            static tcp v4();
            static tcp v6();

          private:
            tcp(); // not defined
          };

        } // namespace ip
      } // namespace sys
    } // namespace tr2
  } // namespace std

A __POSIX__ implementation must provide the following member functions:

  namespace std {
    namespace tr2 {
      namespace sys {
        namespace ip {

          class tcp
          {
          public:
            int family() const;
            int type() const;
            int protocol() const;
            ``['[*// remainder unchanged]]``
          };

        } // namespace ip
      } // namespace sys
    } // namespace tr2
  } // namespace std

In the table below, `u` denotes an identifier. The constants `AF_INET`,
`AF_INET6` and `SOCK_STREAM` are defined in the __POSIX__ header file
__sys_socket_h__. The constant `IPPROTO_TCP` is defined in the __POSIX__ header
file __netinet_in_h__.

[table Table--POSIX values
  [[expression] [value]]
  [
    [`tcp u(tcp::v4()); u.family();`]
    [`AF_INET`]
  ]
  [
    [`tcp u(tcp::v4()); u.type();`]
    [`SOCK_STREAM`]
  ]
  [
    [`tcp u(tcp::v4()); u.protocol();`]
    [`IPPROTO_TCP`]
  ]
  [
    [`tcp u(tcp::v6()); u.family();`]
    [`AF_INET6`]
  ]
  [
    [`tcp u(tcp::v6()); u.type();`]
    [`SOCK_STREAM`]
  ]
  [
    [`tcp u(tcp::v6()); u.protocol();`]
    [`IPPROTO_TCP`]
  ]
]

[endsect]
