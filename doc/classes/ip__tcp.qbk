[section:ip__tcp Class [^ip::tcp]]
[xrefid internet.tcp]

The `tcp` class meets the requirements for an [link
requirements.internet_protocol `InternetProtocol`].

  namespace std {
    namespace experimental {
      __begin_versioned_ns__
        namespace ip {

          class tcp
          {
          public:
            // types:
            typedef basic_endpoint<tcp> endpoint;
            typedef basic_resolver<tcp> resolver;
            typedef basic_stream_socket<tcp> socket;
            typedef basic_socket_acceptor<tcp> acceptor;
            typedef basic_socket_iostream<tcp> iostream;
            class ``[link classes.ip__tcp__no_delay no\_delay]``;

            // static members:
            static tcp v4();
            static tcp v6();

            tcp() = delete;
          };

          // tcp comparisons:
          bool operator==(const tcp& a, const tcp& b);
          bool operator!=(const tcp& a, const tcp& b);

        } // namespace ip
      __end_versioned_ns__
    } // namespace experimental
  } // namespace std

Extensible implementations provide the following member functions:

  namespace std {
    namespace experimental {
      __begin_versioned_ns__
        namespace ip {

          class tcp
          {
          public:
            int family() const;
            int type() const;
            int protocol() const;
            ``['[*// remainder unchanged]]``
          };

        } // namespace ip
      __end_versioned_ns__
    } // namespace experimental
  } // namespace std

In the table below, `u` denotes an identifier.

[table Behavior of extensible implementations
  [[expression] [value]]
  [
    [`tcp u(tcp::v4()); u.family();`]
    [`AF_INET`]
  ]
  [
    [`tcp u(tcp::v4()); u.type();`]
    [`SOCK_STREAM`]
  ]
  [
    [`tcp u(tcp::v4()); u.protocol();`]
    [`IPPROTO_TCP`]
  ]
  [
    [`tcp u(tcp::v6()); u.family();`]
    [`AF_INET6`]
  ]
  [
    [`tcp u(tcp::v6()); u.type();`]
    [`SOCK_STREAM`]
  ]
  [
    [`tcp u(tcp::v6()); u.protocol();`]
    [`IPPROTO_TCP`]
  ]
]

[std_note The constants `AF_INET`, `AF_INET6` and `SOCK_STREAM` are defined in
the __POSIX__ header file __sys_socket_h__. The constant `IPPROTO_TCP` is
defined in the __POSIX__ header file __netinet_in_h__.]

[section [^ip::tcp] comparisons]
[xrefid internet.tcp.comparisons]

  bool operator==(const tcp& a, const tcp& b);

[function_returns A boolean indicating whether two objects of class `tcp` are
equal, such that the expression `tcp::v4() == tcp::v4()` is true, the
expression `tcp::v6() == tcp::v6()` is true, and the expression `tcp::v4() ==
tcp::v6()` is false.]

  bool operator!=(const tcp& a, const tcp& b);

[function_returns `!(a == b)`.]

[endsect]

[endsect]
