[section:resolver_service Class template [^resolver_service]]

Instances of the `resolver_service` class template meet the requirements
of a [link requirements.resolver_service `ResolverService`].

  namespace std {
    namespace tr2 {
      namespace sys {

        template<class ResolverProtocol>
        class resolver_service :
          public io_service::service
        {
        public:
          // types:
          typedef ResolverProtocol protocol_type;
          typedef typename ResolverProtocol::endpoint endpoint_type;
          typedef typename ResolverProtocol::resolver_query query_type;
          typedef typename ResolverProtocol::resolver_iterator iterator_type;
          typedef ``['[*unspecified]]`` implementation_type;

          // constructors:
          explicit resolver_service(io_service& ios);

          // members:
          void shutdown_service();

          void construct(implementation_type& impl);

          void destroy(implementation_type& impl);

          error_code cancel(implementation_type& impl, error_code& ec);

          iterator_type resolve(implementation_type& impl,
                                const query_type& q, error_code& ec);
          template<class ResolveHandler>
            void async_resolve(implementation_type& impl,
                               const query_type& q, ResolverHandler handler);

          iterator_type resolve(implementation_type& impl,
                                const endpoint_type& e, error_code& ec);
          template<class ResolveHandler>
            void async_resolve(implementation_type& impl,
                               const endpoint_type& e, ResolverHandler handler);
        };

      } // namespace sys
    } // namespace tr2
  } // namespace std

[endsect]
