[section:ip__basic_resolver_query Class template [^ip::basic_resolver_query]]

  namespace std {
    namespace experimental {
      inline namespace network_v1 {
        namespace ip {

          template<class InternetProtocol>
          class basic_resolver_query :
            public resolver_query_base
          {
          public:
            // types:
            typedef InternetProtocol protocol_type;

            // constructors:
            basic_resolver_query();
            basic_resolver_query(const string& service_name,
                                 flags f = passive | address_configured);
            basic_resolver_query(const InternetProtocol& proto,
                                 const string& service_name,
                                 flags f = passive | address_configured);
            basic_resolver_query(const string& host_name, 
                                 const string& service_name,
                                 flags f = address_configured);
            basic_resolver_query(const InternetProtocol& proto,
                                 const string& host_name, 
                                 const string& service_name,
                                 flags f = address_configured);
          };

        } // namespace ip
      } // inline namespace network_v1
    } // namespace experimental
  } // namespace std

The `basic_resolver_query` class encapsulates values used in name resolution.
The meanings of the constructor arguments are defined below as if the name
resolution is performed using __POSIX__ __getaddrinfo__:

[mdash] /proto/ is used to populate the `ai_family`, `ai_socktype` and
`ai_protocol` fields of the `addrinfo` structure passed as the /hints/ argument
to __POSIX__ __getaddrinfo__.

[mdash] /host_name/ is passed as the /nodename/ argument to __POSIX__
__getaddrinfo__.

[mdash] /service_name/ is passed as the /servname/ argument to __POSIX__
__getaddrinfo__.

[mdash] /flags/ is used to populate the `ai_flags` field of the `addrinfo`
structure passed as the /hints/ argument to __POSIX__ __getaddrinfo__.

If a default-constructed `basic_resolver_query` object is used in a call to
`basic_resolver<>::resolve()`, the results are undefined.

[endsect]
