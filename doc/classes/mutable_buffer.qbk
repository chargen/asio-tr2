[section:mutable_buffer Class [^mutable_buffer]]
[xrefid buffer.mutable]

  namespace std {
  namespace experimental {
  __begin_versioned_ns__

    class mutable_buffer
    {
    public:
      // constructors:
      mutable_buffer() noexcept;
      mutable_buffer(void* p, size_t n) noexcept;

    private:
      void* data_; // ``['exposition only]``
      size_t size_; // ``['exposition only]``
    };

  __end_versioned_ns__
  } // namespace experimental
  } // namespace std

[section [^mutable_buffer] constructors]
[xrefid buffer.mutable.cons]

  mutable_buffer() noexcept;

[function_postconditions `data_ == nullptr` and `size_ == 0`.]

  mutable_buffer(void* p, size_t n) noexcept;

[function_postconditions `data_ == p` and `size_ == n`.]

[endsect]

[endsect]
