[section:socket_options Socket options]
[xrefid socket.opt]

In the table below, let [^['C]] denote a socket option class; let [^['L]]
identify the __POSIX__ macro to be passed as the /level/ argument to __POSIX__
__setsockopt__ and __getsockopt__; let [^['N]] identify the __POSIX__ macro to
be passed as the /option_name/ argument to __POSIX__ __setsockopt__ and
__getsockopt__; and let [^['T]] identify the type of the value whose address
will be passed as the /option_value/ argument to __POSIX__ __setsockopt__ and
__getsockopt__.

[table socket options
  [[['C]][['L]][['N]][['T]][Requirements, definition or notes]]
  [
    [[^socket_base::broadcast]]
    [[^SOL_SOCKET]]
    [[^SO_BROADCAST]]
    [[^int]]
    [
      Satisfies the [link requirements.bool_socket_option
      `BooleanSocketOption`] type requirements.\n
      \n
      Determines whether a socket permits sending of broadcast messages, if
      supported by the protocol.
    ]
  ]
  [
    [[^socket_base::debug]]
    [[^SOL_SOCKET]]
    [[^SO_DEBUG]]
    [[^int]]
    [
      Satisfies the [link requirements.bool_socket_option
      `BooleanSocketOption`] type requirements.\n
      \n
      Determines whether debugging information is recorded by the underlying
      protocol.
    ]
  ]
  [
    [[^socket_base::do_not_route]]
    [[^SOL_SOCKET]]
    [[^SO_DONTROUTE]]
    [[^int]]
    [
      Satisfies the [link requirements.bool_socket_option
      `BooleanSocketOption`] type requirements.\n
      \n
      Determines whether outgoing messages bypass standard routing facilities.
    ]
  ]
  [
    [[^socket_base::keep_alive]]
    [[^SOL_SOCKET]]
    [[^SO_KEEPALIVE]]
    [[^int]]
    [
      Satisfies the [link requirements.bool_socket_option
      `BooleanSocketOption`] type requirements.\n
      \n
      Determines whether a socket permits sending of keep_alive messages, if
      supported by the protocol.
    ]
  ]
  [
    [[link classes.socket_base__linger [^socket_base::linger]]]
    [[^SOL_SOCKET]]
    [[^SO_LINGER]]
    [[^linger]]
    [
      Controls the behavior when a socket is closed and unsent data is present.
    ]
  ]
  [
    [[^socket_base::out_of_band_inline]]
    [[^SOL_SOCKET]]
    [[^SO_OOBINLINE]]
    [[^int]]
    [
      Satisfies the [link requirements.bool_socket_option
      `BooleanSocketOption`] type requirements.\n
      \n
      Determines whether out-of-band data (also known as urgent data) is
      received inline.
    ]
  ]
  [
    [[^socket_base::receive_buffer_size]]
    [[^SOL_SOCKET]]
    [[^SO_RCVBUF]]
    [[^int]]
    [
      Satisfies the [link requirements.int_socket_option `IntegerSocketOption`]
      type requirements.\n
      \n
      Specifies the size of the receive buffer associated with a socket.
    ]
  ]
  [
    [[^socket_base::receive_low_watermark]]
    [[^SOL_SOCKET]]
    [[^SO_RCVLOWAT]]
    [[^int]]
    [
      Satisfies the [link requirements.int_socket_option `IntegerSocketOption`]
      type requirements.\n
      \n
      Specifies the minimum number of bytes to process for socket input
      operations.
    ]
  ]
  [
    [[^socket_base::reuse_address]]
    [[^SOL_SOCKET]]
    [[^SO_REUSEADDR]]
    [[^int]]
    [
      Satisfies the [link requirements.bool_socket_option
      `BooleanSocketOption`] type requirements.\n
      \n
      Determines whether the validation of endpoints used for binding a socket
      should allow the reuse of local endpoints, if supported by the protocol.
    ]
  ]
  [
    [[^socket_base::send_buffer_size]]
    [[^SOL_SOCKET]]
    [[^SO_SNDBUF]]
    [[^int]]
    [
      Satisfies the [link requirements.int_socket_option `IntegerSocketOption`]
      type requirements.\n
      \n
      Specifies the size of the send buffer associated with a socket.
    ]
  ]
  [
    [[^socket_base::send_low_watermark]]
    [[^SOL_SOCKET]]
    [[^SO_SNDLOWAT]]
    [[^int]]
    [
      Satisfies the [link requirements.int_socket_option `IntegerSocketOption`]
      type requirements.\n
      \n
      Specifies the minimum number of bytes to process for socket output
      operations.
    ]
  ]
]

[include:classes socket_base__linger.qbk]

[endsect]
