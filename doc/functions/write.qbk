[section:write Synchronous write operations]

  template<class SyncWriteStream, class ConstBufferSequence>
    size_t write(SyncWriteStream& stream,
                 const ConstBufferSequence& buffers);
  template<class SyncWriteStream, class ConstBufferSequence>
    size_t write(SyncWriteStream& stream,
                 const ConstBufferSequence& buffers, error_code& ec);
  template<class SyncWriteStream, class ConstBufferSequence,
    class CompletionCondition>
      size_t write(SyncWriteStream& stream,
                   const ConstBufferSequence& buffers,
                   CompletionCondition completion_condition);
  template<class SyncWriteStream, class ConstBufferSequence,
    class CompletionCondition>
      size_t write(SyncWriteStream& stream,
                   const ConstBufferSequence& buffers,
                   CompletionCondition completion_condition,
                   error_code& ec);

[function_effects Writes data to the [link requirements.sync_write_stream
buffer-oriented synchronous write stream] object `stream` by performing one or
more calls to the stream's `write_some` member function.]

[function_block The [link requirements.const_buffers constant buffer sequence]
`buffers` specifies memory where the data to be written is located. The
synchronous write operation shall always write a buffer in the sequence
completely before proceeding to the next.]

[function_block The `completion_condition` parameter specifies a function
object to be called after each call to the stream's `write_some` member
function. The function object is passed the `error_code` value from the most
recent `write_some` call, and the total number of bytes transferred in the
synchronous write operation so far. Overloads where a completion condition is
not specified behave as if called with an object of class `transfer_all`.]

[function_block The synchronous write operation continues until:]

[function_block - all buffers in the constant buffer sequence `buffers` have
been written; or]

[function_block - the completion condition returns true.]

[function_block On exit, `ec` contains the `error_code` value from the most
recent `write_some` call.]

[function_returns The total number of bytes transferred in the synchronous
write operation.]

  template<class SyncWriteStream, class Allocator>
    size_t write(SyncWriteStream& stream, basic_fifobuf<Allocator>& fb);
  template<class SyncWriteStream, class Allocator>
    size_t write(SyncWriteStream& stream, basic_fifobuf<Allocator>& fb,
                 error_code& ec);
  template<class SyncWriteStream, class Allocator,
    class CompletionCondition>
      size_t write(SyncWriteStream& stream,
                   basic_fifobuf<Allocator>& fb,
                   CompletionCondition completion_condition);
  template<class SyncWriteStream, class Allocator,
    class CompletionCondition>
      size_t write(SyncWriteStream& stream,
                   basic_fifobuf<Allocator>& fb,
                   CompletionCondition completion_condition,
                   error_code& ec);

[function_effects Writes data to the [link requirements.sync_write_stream
synchronous write stream] object `stream` by performing one or more calls to
the stream's `write_some` member function.]

[function_block Data is written from the `basic_fifobuf<>` object `fb`. A [link
requirements.const_buffers constant buffer sequence] is obtained prior to each
`write_some` call using `fb.data()`. After each `write_some` call, the
implementation performs `fb.consume(n)`, where `n` is the return value from
`write_some`.]

[function_block The `completion_condition` parameter specifies a function
object to be called after each call to the stream's `write_some` member
function. The function object is passed the `error_code` value from the most
recent `write_some` call, and the total number of bytes transferred in the
synchronous write operation so far. Overloads where a completion condition is
not specified behave as if called with an object of class `transfer_all`.]

[function_block The synchronous write operation continues until:]

[function_block - the `basic_fifobuf<>` object `fb` is empty, that is
`fb.size() == 0`; or]

[function_block - the completion condition returns true.]

[function_block On exit, `ec` contains the `error_code` value from the most
recent `write_some` call.]

[function_returns The total number of bytes transferred in the synchronous
write operation.]

[endsect]
