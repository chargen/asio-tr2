[section:write Synchronous write operations]

  template<class SyncWriteStream, class ConstBufferSequence>
    size_t write(SyncWriteStream& stream,
                 const ConstBufferSequence& buffers);
  template<class SyncWriteStream, class ConstBufferSequence>
    size_t write(SyncWriteStream& stream,
                 const ConstBufferSequence& buffers, error_code& ec);
  template<class SyncWriteStream, class ConstBufferSequence,
    class CompletionCondition>
      size_t write(SyncWriteStream& stream,
                   const ConstBufferSequence& buffers,
                   CompletionCondition completion_condition);
  template<class SyncWriteStream, class ConstBufferSequence,
    class CompletionCondition>
      size_t write(SyncWriteStream& stream,
                   const ConstBufferSequence& buffers,
                   CompletionCondition completion_condition,
                   error_code& ec);

[function_block A [link requirements.synchronous_write_operations synchronous
write operation].]

[function_effects Writes data to the [link requirements.sync_write_stream
buffer-oriented synchronous write stream] object `stream` by performing zero or
more calls to the stream's `write_some` member function.]

[function_block The `completion_condition` parameter specifies a function
object to be called prior to each call to the stream's `write_some` member
function. The function object is passed the `error_code` value from the most
recent `write_some` call, and the total number of bytes transferred in the
synchronous write operation so far. The function object return value specifies
the maximum number of bytes to be write on the subsequent `write_some` call.
Overloads where a completion condition is not specified behave as if called
with an object of class `transfer_all`.]

[function_block The synchronous write operation continues until:]

[function_block [mdash] the total number of bytes transferred is equal to
`buffer_size(buffers)`; or]

[function_block [mdash] the completion condition returns `0`.]

[function_block On return, `ec` contains the `error_code` value from the most
recent `write_some` call.]

[function_returns The total number of bytes transferred in the synchronous
write operation.]

[function_remarks This function shall not participate in overload resolution
unless `is_const_buffer_sequence<ConstBufferSequence>::value` is true.]

  template<class SyncWriteStream, class DynamicBufferSequence>
    size_t write(SyncWriteStream& stream, DynamicBufferSequence&& b);
  template<class SyncWriteStream, class DynamicBufferSequence>
    size_t write(SyncWriteStream& stream, DynamicBufferSequence&& b,
                 error_code& ec);
  template<class SyncWriteStream, class DynamicBufferSequence,
    class CompletionCondition>
      size_t write(SyncWriteStream& stream,
                   DynamicBufferSequence&& b,
                   CompletionCondition completion_condition);
  template<class SyncWriteStream, class DynamicBufferSequence,
    class CompletionCondition>
      size_t write(SyncWriteStream& stream,
                   DynamicBufferSequence&& b,
                   CompletionCondition completion_condition,
                   error_code& ec);

[function_effects Writes data to the [link requirements.sync_write_stream
synchronous write stream] object `stream` by performing zero or more calls to
the stream's `write_some` member function.]

[function_block Data is written from the [link requirements.dynamic_buffers
dynamic buffer sequence] object `b`. A [link requirements.const_buffers
constant buffer sequence] is obtained using `b.data()`. After the data has been
written to the stream, the implementation performs `b.consume(n)`, where `n` is
the number of bytes successfully written.]

[function_block The `completion_condition` parameter specifies a function
object to be called after each call to the stream's `write_some` member
function. The function object is passed the `error_code` value from the most
recent `write_some` call, and the total number of bytes transferred in the
synchronous write operation so far. Overloads where a completion condition is
not specified behave as if called with an object of class `transfer_all`.]

[function_block The synchronous write operation continues until:]

[function_block [mdash] `b.size() == 0`; or]

[function_block [mdash] the completion condition returns `0`.]

[function_block On return, `ec` contains the `error_code` value from the most
recent `write_some` call.]

[function_returns The total number of bytes transferred in the synchronous
write operation.]

[function_remarks This function shall not participate in overload resolution
unless `is_dynamic_buffer_sequence<DynamicBufferSequence>::value` is true.]

[endsect]
