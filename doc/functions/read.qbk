[section:read Synchronous read operations]
[xrefid buffer.read]

  template<class SyncReadStream, class MutableBufferSequence>
    size_t read(SyncReadStream& stream,
                const MutableBufferSequence& buffers);
  template<class SyncReadStream, class MutableBufferSequence>
    size_t read(SyncReadStream& stream,
                const MutableBufferSequence& buffers, error_code& ec);
  template<class SyncReadStream, class MutableBufferSequence,
    class CompletionCondition>
      size_t read(SyncReadStream& stream,
                  const MutableBufferSequence& buffers,
                  CompletionCondition completion_condition);
  template<class SyncReadStream, class MutableBufferSequence,
    class CompletionCondition>
      size_t read(SyncReadStream& stream,
                  const MutableBufferSequence& buffers,
                  CompletionCondition completion_condition,
                  error_code& ec);

[function_block A [link requirements.read_write_operations read operation].]

[function_effects Clears `ec`, then reads data from the [link
requirements.sync_read_stream buffer-oriented synchronous read stream] object
`stream` by performing zero or more calls to the stream's `read_some` member
function.]

[function_block The `completion_condition` parameter specifies a function
object to be called prior to each call to the stream's `read_some` member
function. The function object is passed the `error_code` value from the most
recent `read_some` call, and the total number of bytes transferred in the
synchronous read operation so far. The function object return value specifies
the maximum number of bytes to be read on the subsequent `read_some` call.
Overloads where a completion condition is not specified behave as if called
with an object of class `transfer_all`.]

[function_block The synchronous read operation continues until:]

[function_block [mdash] the total number of bytes transferred is equal to
`buffer_size(buffers)`; or]

[function_block [mdash] the completion condition returns `0`.]

[function_block On return, `ec` contains the `error_code` value from the most
recent `read_some` call.]

[function_returns The total number of bytes transferred in the synchronous read
operation.]

[function_remarks This function shall not participate in overload resolution
unless `is_mutable_buffer_sequence<MutableBufferSequence>::value` is `true`.]

  template<class SyncReadStream, class DynamicBuffer>
    size_t read(SyncReadStream& stream, DynamicBuffer&& b);
  template<class SyncReadStream, class DynamicBuffer>
    size_t read(SyncReadStream& stream, DynamicBuffer&& b, error_code& ec);
  template<class SyncReadStream, class DynamicBuffer,
    class CompletionCondition>
      size_t read(SyncReadStream& stream, DynamicBuffer&& b,
                  CompletionCondition completion_condition);
  template<class SyncReadStream, class DynamicBuffer,
    class CompletionCondition>
      size_t read(SyncReadStream& stream, DynamicBuffer&& b,
                  CompletionCondition completion_condition,
                  error_code& ec);

[function_effects Clears `ec`, then reads data from the [link
requirements.sync_read_stream synchronous read stream] object `stream` by
performing zero or more calls to the stream's `read_some` member function.]

[function_block Data is placed into the [link requirements.dynamic_buffers
dynamic buffer] object `b`. A [link requirements.mutable_buffers mutable buffer
sequence] is obtained prior to each `read_some` call using `b.prepare(N)`,
where `N` is an unspecified value less than or equal to `b.max_size()
- b.size()`. [inline_note Implementations are encouraged to use `b.capacity()`
when determining `N`, to minimize the number of `read_some` calls performed
on the stream.] After each `read_some` call, the implementation performs
`b.commit(n)`, where `n` is the return value from `read_some`.]

[function_block The `completion_condition` parameter specifies a function
object to be called prior to each call to the stream's `read_some` member
function. The function object is passed the `error_code` value from the most
recent `read_some` call, and the total number of bytes transferred in the
synchronous read operation so far. The function object return value specifies
the maximum number of bytes to be read on the subsequent `read_some` call.
Overloads where a completion condition is not specified behave as if called
with an object of class `transfer_all`.]

[function_block The synchronous read operation continues until:]

[function_block [mdash] `b.size() == b.max_size()`; or]

[function_block [mdash] the completion condition returns `0`.]

[function_block On return, `ec` contains the `error_code` value from the most
recent `read_some` call.]

[function_returns The total number of bytes transferred in the synchronous read
operation.]

[function_remarks This function shall not participate in overload resolution
unless `is_dynamic_buffer<DynamicBuffer>::value` is `true`.]

[endsect]
