[section:gettable_socket_option Gettable socket option requirements]
[xrefid socket.reqmts.gettablesocketoption]

In the table below, `X` denotes a socket option class, `a` denotes a (possibly
const) value of type `X`, `b` denotes a value of type `X`, `p` denotes a
(possibly const) value that meets the [link requirements.protocol protocol]
requirements, `s` denotes a (possibly const) value of type `size_t`, and `u`
denotes an identifier.

[table GettableSocketOption requirements for extensible implementations
  [[expression] [type] [assertion/note\npre/post-conditions]]
  [
    [`a.level(p);`]
    [`int`]
    [
      Returns a value suitable for passing as the /level/ argument to __POSIX__
      __getsockopt__ (or equivalent).
    ]
  ]
  [
    [`a.name(p);`]
    [`int`]
    [
      Returns a value suitable for passing as the /option_name/ argument to
      __POSIX__ __getsockopt__ (or equivalent).
    ]
  ]
  [
    [`b.data(p);`]
    [`void*`]
    [
      Returns a pointer suitable for passing as the /option_value/ argument to
      __POSIX__ __getsockopt__ (or equivalent).
    ]
  ]
  [
    [`a.size(p);`]
    [`size_t`]
    [
      Returns a value suitable for passing as the /option_len/ argument to
      __POSIX__ __getsockopt__ (or equivalent), after appropriate
      integer conversion has been performed.
    ]
  ]
  [
    [`b.resize(p,s);`]
    []
    [
      post: `b.size(p) == s`.\n
      Passed the value contained in the /option_len/ argument to __POSIX__
      __getsockopt__ (or equivalent) after successful completion of the
      function. Permitted to throw an exception if the socket option object `b`
      does not support the specified size.
    ]
  ]
]

[endsect]
