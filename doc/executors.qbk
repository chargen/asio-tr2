[library Executors and Asynchronous Operations, Revision 2
    [quickbook 1.1]
    [id executors]
]

[/-----------------------------------------------------------------------------]

[template std_note[text]
\[['Note:] [text] '''&mdash;'''['end note]\]
]

[template inline_note[text] \[['Note:] [text] '''&mdash;'''['end note]\] ]

[template std_example[text code]
\[['Example:] [text]
[code]
'''&mdash;'''['end example]\]
]

[template function_block[text]
[:[text]]
]

[template function_requires[text]
[:['Requires:] [text]]
]

[template function_effects[text]
[:['Effects:] [text]]
]

[template function_returns[text]
[:['Returns:] [text]]
]

[template function_throws[text]
[:['Throws:] [text]]
]

[template function_postconditions[text]
[:['Postconditions:] [text]]
]

[template function_error_conditions[text]
[:['Error conditions:] [text]]
]

[template function_completion_signature[text]
[:['Completion signature:] [text]]
]

[template function_complexity[text]
[:['Complexity:] [text]]
]

[template function_synchronization[text]
[:['Synchronization:] [text]]
]

[template function_remarks[text]
[:['Remarks:] [text]]
]

[template function_notes[text]
[:['Notes:] [text]]
]

[template function_note[text]
[:\[['Note:] [text] '''&mdash;'''['end note]\]]
]

[template function_example[text]
[:\[['Example:] [text]
'''&mdash;'''['end example]\]]
]

[template function_type[text]
[:['Type:] [text]]
]

[template commentary[text]
[blurb [text]]
]

[template xrefid[text]]
[template xref[text] [text]]

[template mdash[] '''&mdash; ''']
[template indent[] '''&nbsp;&nbsp;&nbsp;&nbsp;''']
[template bullet[] [indent]'''&bull; ''']
[template arrow[] '''&rarr; ''']

[template half_open_range[text] '''&#91;'''[text])]

[template sup[x]'''<superscript>'''[x]'''</superscript>''']
[template sub[x]'''<subscript>'''[x]'''</subscript>''']

[template footnote[text]'''<footnote>'''text'''</footnote>''']

[/-----------------------------------------------------------------------------]

[def __dotdot__ ..]
[def __dotdotdot__ ...]
[def __unspecified__ '''<emphasis>unspecified</emphasis>''']
[def __ifr__ '''<emphasis>DEDUCED</emphasis>''']
[def __ns__ concurrency]
[def __versioned_ns__ concurrency_v2]
[def __begin_versioned_ns__ '''<phrase role="keyword">inline namespace</phrase> <phrase role="identifier">concurrency_v2</phrase> <phrase role="special">{</phrase>''']
[def __end_versioned_ns__ '''<phrase role="special">}</phrase> <phrase role="comment">// inline namespace concurrency_v2</phrase>''']
[def __concurrency__]

[/-----------------------------------------------------------------------------]

[section Introduction]

[endsect]

[/-----------------------------------------------------------------------------]

[section Proposed text]

[/commentary Grey-shaded italic text is commentary on the proposal. It is not to
be added to the TS.]

[section Library summary]
[xrefid summary]

[table Library summary
  [[Clause][Header(s)]]
  [
    [[link headers.executor Asynchronous model]]
    [`<experimental/executor>`]
  ]
  [
    [[link headers.thread_pool A fixed-size thread pool]]
    [`<experimental/thread_pool>`]
  ]
  [
    [[link headers.loop_scheduler A thread pool where existing threads are assigned to the pool]]
    [`<experimental/loop_scheduler>`]
  ]
]

Throughout this Technical Specification, the names of the template parameters
are used to express type requirements, as listed in the table below.

[table Template parameters and type requirements
  [[template parameter name][type requirements]]
  [
    [`Allocator`]
    [C++Std \[allocator.requirements\]]
  ]
  [
    [`Clock`]
    [C++Std \[time.clock.req\]]
  ]
  [
    [`CompletionToken`]
    [[link requirements.completion_token completion token]]
  ]
  [
    [`ExecutionContext`]
    [[link requirements.execution_context execution context]]
  ]
  [
    [`Executor`]
    [[link requirements.executor executor]]
  ]
  [
    [`ProtoAllocator`]
    [[link requirements.proto_allocator proto-allocator]]
  ]
  [
    [`Service`]
    [[link requirements.service service]]
  ]
  [
    [`Signature`]
    [[link requirements.signature signature]]
  ]
]

[endsect]

[include:headers headers/concurrency/executor.qbk]
[section:async_requirements Requirements]
[include:requirements requirements/proto_allocator.qbk]
[include:requirements requirements/execution_context.qbk]
[include:requirements requirements/executor.qbk]
[include:requirements requirements/service.qbk]
[include:requirements requirements/signature.qbk]
[include:requirements requirements/associator.qbk]
[include:requirements requirements/asynchronous_operations.qbk]
[endsect]
[include:classes classes/async_result.qbk]
[include:classes classes/async_completion.qbk]
[include:classes classes/associated_allocator.qbk]
[include:functions functions/get_associated_allocator.qbk]
[include:classes classes/execution_context.qbk]
[include:classes classes/execution_context__service.qbk]
[include:classes classes/is_executor.qbk]
[include:classes classes/executor_arg_t.qbk]
[include:classes classes/uses_executor.qbk]
[include:classes classes/associated_executor.qbk]
[include:functions functions/get_associated_executor.qbk]
[include:classes classes/executor_binder.qbk]
[include:functions functions/bind_executor.qbk]
[include:classes classes/executor_work_guard.qbk]
[include:functions functions/make_work_guard.qbk]
[include:classes classes/system_executor.qbk]
[include:classes classes/system_context.qbk]
[include:classes classes/bad_executor.qbk]
[include:classes classes/executor.qbk]
[include:functions functions/dispatch.qbk]
[include:functions functions/post.qbk]
[include:functions functions/defer.qbk]
[include:classes classes/strand.qbk]
[include:classes classes/use_future_t.qbk]
[include:classes classes/async_result_packaged_task.qbk]
[include:headers headers/concurrency/thread_pool.qbk]
[include:classes classes/thread_pool.qbk]
[include:classes classes/thread_pool__executor_type.qbk]
[include:headers headers/concurrency/loop_scheduler.qbk]
[include:classes classes/loop_scheduler.qbk]
[include:classes classes/loop_scheduler__executor_type.qbk]

[endsect]

[/-----------------------------------------------------------------------------]
