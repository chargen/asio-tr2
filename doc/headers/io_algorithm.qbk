[section Header [^<io_algorithm>] synopsis]

  namespace std {
    namespace tr2 {
      namespace sys {

        unspecified transfer_all();
        unspecified transfer_at_least(size_t);

        template <class Sync_Read_Stream, class Mutable_Buffers>
          size_t read(Sync_Read_Stream&, const Mutable_Buffers&);
        template <class Sync_Read_Stream, class Mutable_Buffers,
          class Completion_Condition>
            size_t read(Sync_Read_Stream&, const Mutable_Buffers&,
              Completion_Condition);
        template <class Sync_Read_Stream, class Mutable_Buffers,
          class Completion_Condition>
            size_t read(Sync_Read_Stream&, const Mutable_Buffers&,
              Completion_Condition, error_code&);
        template <class Async_Read_Stream, class Mutable_Buffers, class Handler>
          size_t async_read(Async_Read_Stream&, const Mutable_Buffers&, Handler);
        template <class Async_Read_Stream, class Mutable_Buffers,
          class Completion_Condition, class Handler>
            size_t async_read(Async_Read_Stream&, const Mutable_Buffers&,
              Completion_Condition, Handler);

        template <class Sync_Write_Stream, class Const_Buffers>
          size_t write(Sync_Write_Stream&, const Const_Buffers&);
        template <class Sync_Write_Stream, class Const_Buffers,
          class Completion_Condition>
            size_t write(Sync_Write_Stream&, const Const_Buffers&,
              Completion_Condition);
        template <class Sync_Write_Stream, class Const_Buffers,
          class Completion_Condition>
            size_t write(Sync_Write_Stream&, const Const_Buffers&,
              Completion_Condition, error_code&);
        template <class Async_Write_Stream, class Const_Buffers, class Handler>
          size_t async_write(Async_Write_Stream&, const Const_Buffers&, Handler);
        template <class Async_Write_Stream, class Const_Buffers,
          class Completion_Condition, class Handler>
            size_t async_write(Async_Write_Stream&, const Const_Buffers&,
              Completion_Condition, Handler);

      } // namespace sys
    } // namespace tr2
  } // namespace std

[endsect]
