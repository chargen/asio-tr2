[section Header [^<experimental/memory>] synopsis]

  namespace std {
    namespace experimental {
      __begin_versioned_ns__

        template<class T, class Alloc = allocator<void>>
          struct ``[link classes.associated_allocator associated_allocator]``;

        template<class T, class Alloc = allocator<void>>
          using associated_allocator_t = typename associated_allocator<T, Alloc>::type;

        ``// [link functions.get_associated_allocator get_associated_allocator]:``

        template<class T>
          associated_allocator_t<T> get_associated_allocator(const T& t);
        template<class T, class Alloc>
          associated_allocator_t<T, Alloc>
            get_associated_allocator(const T& t, const Alloc& a);

      __end_versioned_ns__
    } // namespace experimental
  } // namespace std

[endsect]
