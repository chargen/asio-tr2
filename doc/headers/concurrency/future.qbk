[section Header [^<experimental/future>] synopsis]

  #include <future>

  namespace std {
  namespace experimental {
  __begin_versioned_ns__

    template<class Allocator = allocator<void>>
      class ``[link classes.use_future_t use_future_t]``;

    constexpr use_future_t<> use_future = use_future_t<>();

    template<class Allocator, class R, class... Args>
      class async_result<use_future_t<Allocator>, R(Args...)>;

    template<class R, class... Args, class Signature>
      class ``[link classes.async_result_packaged_task async_result<packaged_task<R(Args...)>, Signature>]``;

  __end_versioned_ns__
  } // namespace experimental
  } // namespace std

[endsect]
