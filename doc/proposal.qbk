[library Networking Library Proposal (Revision 2)
    [quickbook 1.1]
    [id network]
]

[/-----------------------------------------------------------------------------]

[template std_note[text]
\[['Note:] [text] '''&mdash;'''['end note]\]
]

[template inline_note[text] \[['Note:] [text] '''&mdash;'''['end note]\] ]

[template std_example[text code]
\[['Example:] [text]
[code]
'''&mdash;'''['end example]\]
]

[template function_block[text]
[:[text]]
]

[template function_requires[text]
[:['Requires:] [text]]
]

[template function_effects[text]
[:['Effects:] [text]]
]

[template function_returns[text]
[:['Returns:] [text]]
]

[template function_throws[text]
[:['Throws:] [text]]
]

[template function_postconditions[text]
[:['Postconditions:] [text]]
]

[template function_error_conditions[text]
[:['Error conditions:] [text]]
]

[template function_completion_signature[text]
[:['Completion signature:] [text]]
]

[template function_complexity[text]
[:['Complexity:] [text]]
]

[template function_remarks[text]
[:['Remarks:] [text]]
]

[template function_notes[text]
[:['Notes:] [text]]
]

[template function_note[text]
[:\[['Note:] [text] '''&mdash;'''['end note]\]]
]

[template function_example[text]
[:\[['Example:] [text]
'''&mdash;'''['end example]\]]
]

[template function_type[text]
[:['Type:] [text]]
]

[template commentary[text]
[blurb [text]]
]

[template mdash[] '''&mdash; ''']

[template half_open_range[text] '''&#91;'''[text])]

[/-----------------------------------------------------------------------------]

[def __POSIX__ /POSIX/]
[def __Windows__ /Windows/]
[def __accept__ [@http://www.opengroup.org/onlinepubs/000095399/functions/accept.html `accept()`]]
[def __bind__ [@http://www.opengroup.org/onlinepubs/000095399/functions/bind.html `bind()`]]
[def __close__ [@http://www.opengroup.org/onlinepubs/000095399/functions/close.html `close()`]]
[def __connect__ [@http://www.opengroup.org/onlinepubs/000095399/functions/connect.html `connect()`]]
[def __fcntl__ [@http://www.opengroup.org/onlinepubs/000095399/functions/fcntl.html `fcntl()`]]
[def __getaddrinfo__ [@http://www.opengroup.org/onlinepubs/000095399/functions/getaddrinfo.html `getaddrinfo()`]]
[def __gethostname__ [@http://www.opengroup.org/onlinepubs/000095399/functions/gethostname.html `gethostname()`]]
[def __getnameinfo__ [@http://www.opengroup.org/onlinepubs/000095399/functions/getnameinfo.html `getnameinfo()`]]
[def __getpeername__ [@http://www.opengroup.org/onlinepubs/000095399/functions/getpeername.html `getpeername()`]]
[def __getsockname__ [@http://www.opengroup.org/onlinepubs/000095399/functions/getsockname.html `getsockname()`]]
[def __getsockopt__ [@http://www.opengroup.org/onlinepubs/000095399/functions/getsockopt.html `getsockopt()`]]
[def __inet_ntop__ [@http://www.opengroup.org/onlinepubs/000095399/functions/inet_ntop.html `inet_ntop()`]]
[def __inet_pton__ [@http://www.opengroup.org/onlinepubs/000095399/functions/inet_pton.html `inet_pton()`]]
[def __ioctl__ [@http://www.opengroup.org/onlinepubs/000095399/functions/ioctl.html `ioctl()`]]
[def __listen__ [@http://www.opengroup.org/onlinepubs/000095399/functions/listen.html `listen()`]]
[def __recvfrom__ [@http://www.opengroup.org/onlinepubs/000095399/functions/recvfrom.html `recvfrom()`]]
[def __recvmsg__ [@http://www.opengroup.org/onlinepubs/000095399/functions/recvmsg.html `recvmsg()`]]
[def __sendmsg__ [@http://www.opengroup.org/onlinepubs/000095399/functions/sendto.html `sendmsg()`]]
[def __sendto__ [@http://www.opengroup.org/onlinepubs/000095399/functions/sendto.html `sendto()`]]
[def __setsockopt__ [@http://www.opengroup.org/onlinepubs/000095399/functions/setsockopt.html `setsockopt()`]]
[def __shutdown__ [@http://www.opengroup.org/onlinepubs/000095399/functions/shutdown.html `shutdown()`]]
[def __sockatmark__ [@http://www.opengroup.org/onlinepubs/000095399/functions/sockatmark.html `sockatmark()`]]
[def __socket__ [@http://www.opengroup.org/onlinepubs/000095399/functions/socket.html `socket()`]]
[def __errno_h__ [@http://www.opengroup.org/onlinepubs/000095399/basedefs/errno.h.html `errno.h`]]
[def __netdb_h__ [@http://www.opengroup.org/onlinepubs/000095399/basedefs/netdb.h.html `netdb.h`]]
[def __sys_socket_h__ [@http://www.opengroup.org/onlinepubs/000095399/basedefs/sys/socket.h.html `sys/socket.h`]]
[def __netinet_in_h__ [@http://www.opengroup.org/onlinepubs/000095399/basedefs/netinet/in.h.html `netinet/in.h`]]
[def __netinet_tcp_h__ [@http://www.opengroup.org/onlinepubs/000095399/basedefs/netinet/tcp.h.html `netinet/tcp.h`]]
[def __dotdotdot__ ...]
[def __unspecified__ '''<emphasis>unspecified</emphasis>''']

[/-----------------------------------------------------------------------------]

[template POSIX[] \[[link ref-POSIX POSIX]\]]
[template N1900[] \[[link ref-N1900 N1900]\]]
[template N1975[] \[[link ref-N1975 N1975]\]]
[template N2052[] \[[link ref-N2052 N2052]\]]
[template N2066[] \[[link ref-N2066 N2066]\]]
[template N2174[] \[[link ref-N2174 N2174]\]]
[template ACE[] \[[link ref-ACE ACE]\]]
[template SYMBIAN[] \[[link ref-SYMBIAN SYMBIAN]\]]
[template MSNET[] \[[link ref-MS-NET MS-NET]\]]
[template ESAPI[] \[[link ref-ES-API ES-API]\]]
[template UNPV1[] \[[link ref-UNPV1 UNPV1]\]]
[template POSA2[] \[[link ref-POSA2 POSA2]\]]
[template RFC821[] \[[link ref-RFC821 RFC821]\]]
[template RFC959[] \[[link ref-RFC959 RFC959]\]]
[template RFC2616[] \[[link ref-RFC2616 RFC2616]\]]
[template RFC2732[] \[[link ref-RFC2732 RFC2732]\]]
[template RFC3513[] \[[link ref-RFC3513 RFC3513]\]]

[/-----------------------------------------------------------------------------]

[section Overview]

TBD.

[endsect]

[/-----------------------------------------------------------------------------]

[section Motivation and Scope]

[section Scope]

Problem areas addressed by this proposal include:

* Networking using TCP and UDP, including support for multicast.
* Client and server applications.
* Scalability to handle many concurrent connections.
* Protocol independence between IPv4 and IPv6.
* Name resolution (i.e. DNS).
* Timers.

Features that are considered outside the scope of this proposal include:

* Protocol implementations such as HTTP, SMTP or FTP.
* Encryption (e.g. SSL, TLS).
* Operating system specific demultiplexing APIs.
* Support for realtime environments.
* QoS-enabled sockets.
* Other TCP/IP protocols such as ICMP.
* Functions and classes for enumerating network interfaces.

[endsect]

[section Target Audience]

The bulk of the library interface is intended for use by developers with at
least some understanding of networking concepts (or a willingness to learn). A
high level iostreams interface supports simple use cases and permits novices to
develop network code without needing to get into too much depth.

[endsect]

[section Reference Implementation]

The Boost.Asio library, from which this proposal is derived, has been deployed
in a number of production systems, such as internet-facing HTTP servers,
instant messaging gateways and finance applications.

The Boost.Asio library supports, or has been ported to, many operating systems
including Linux, Mac OS X, Windows (native), Windows Runtime, Solaris, FreeBSD,
NetBSD, OpenBSD, HP-UX, Tru64, AIX, iOS, Android, WinCE, Symbian,
vxWorks and QNX Neutrino.

Boost.Asio may be obtained from [@http://www.boost.org].

[endsect]

[section Related Work]

The interface is based on the BSD sockets API, which is widely implemented and
supported by extensive literature. It is also used as the basis of networking
APIs in other languages (e.g. Java). Unsafe practices of the BSD sockets API,
e.g. lack of compile-time type safety, are not included.

Asynchronous support is derived from the Proactor design pattern as implemented
by the ADAPTIVE Communication Environment [ACE], and is influenced by the
design of the Symbian C++ sockets API [SYMBIAN], which supports synchronous and
asynchronous operations side-by-side. The Microsoft .NET socket classes [MSNET]
and the Extended Sockets API [ESAPI] developed by The Open Group support
similar styles of network programming.

[endsect]

[endsect]

[/-----------------------------------------------------------------------------]

[section Impact On the Standard]

This is a pure library proposal. It does not add any new language features, nor
does it alter any existing standard library headers.

This library can be implemented using compilers that conform to the C++14
standard. An implementation of this library requires operating system-specific
functions that lie outside the C++14 standard.

[endsect]

[/-----------------------------------------------------------------------------]

[section Design Decisions]

TBD.

[endsect]

[/-----------------------------------------------------------------------------]

[section Proposed Text for the Standard]

[commentary Grey-shaded italic text is commentary on the proposal. It is not to
be added to the TR.]

This clause describes components that C++ programs may use to perform network
operations.

[commentary The Filesystem Library Proposal [N1975] adds introductory text to
the TR to establish a relationship to __POSIX__ [POSIX]. This proposal uses the
relationship to similarly define behaviour "as if" implemented by __POSIX__,
except that the requirements for error reporting are stricter than those
outlined in [N1975].]

The following subclauses describe components for I/O services, timers, buffer
management, sockets, endpoint resolution, iostreams, and internet protocol, as
summarised in the table below:

[table Networking library summary
  [[Subclause][Header(s)]]
  [
    [[link network.async Asynchronous model]]
    [`<experimental/async>`]
  ]
  [
    [[link network.basic_io_services Basic I/O services]]
    [`<experimental/io_service>`]
  ]
  [
    [[link network.timers Timers]]
    [`<experimental/timer>`]
  ]
  [
    [[link network.buffers Buffers]]
    [`<experimental/buffer>`]
  ]
  [
    [
      [link network.sockets Sockets]\n
      [link network.socket_streams Socket streams]\n
    ]
    [`<experimental/socket>`]
  ]
  [
    [
      [link network.internet_protocol Internet protocol]\n
    ]
    [`<experimental/internet>`]
  ]
]

Throughout this clause, the names of the template parameters are used to
express type requirements, as listed in the table below.

[table Template parameters and type requirements
  [[template parameter name][type requirements]]
  [
    [`AsyncReadStream`]
    [[link requirements.async_read_stream buffer-oriented asynchronous read stream]]
  ]
  [
    [`AsyncWriteStream`]
    [[link requirements.async_write_stream buffer-oriented asynchronous write stream]]
  ]
  [
    [`CompletionHandler`]
    [[link requirements.completion_handler completion handler]]
  ]
  [
    [`ConstBufferSequence`]
    [[link requirements.const_buffers constant buffer sequence]]
  ]
  [
    [`ConvertibleToConstBuffer`]
    [[link requirements.convertible_to_const_buffer convertible to a
    constant buffer]]
  ]
  [
    [`ConvertibleToMutableBuffer`]
    [[link requirements.convertible_to_mutable_buffer convertible to a
    mutable buffer]]
  ]
  [
    [`GettableSocketOption`]
    [[link requirements.gettable_socket_option gettable socket option]]
  ]
  [
    [`Handler`]
    [[link requirements.handler handler]]
  ]
  [
    [`InternetProtocol`]
    [[link requirements.internet_protocol Internet protocol]]
  ]
  [
    [`IoControlCommand`]
    [[link requirements.io_control_command I/O control command]]
  ]
  [
    [`IoObjectService`]
    [[link requirements.io_object_service I/O object service]]
  ]
  [
    [`MutableBufferSequence`]
    [[link requirements.mutable_buffers mutable buffer sequence]]
  ]
  [
    [`Protocol`]
    [[link requirements.protocol protocol]]
  ]
  [
    [`Service`]
    [[link requirements.service service]]
  ]
  [
    [`SettableSocketOption`]
    [[link requirements.settable_socket_option settable socket option]]
  ]
  [
    [`SyncReadStream`]
    [[link requirements.sync_read_stream buffer-oriented synchronous read stream]]
  ]
  [
    [`SyncWriteStream`]
    [[link requirements.sync_write_stream buffer-oriented synchronous write stream]]
  ]
  [
    [`WaitTraits`]
    [[link requirements.wait_traits wait traits]]
  ]
]

[include:definitions definitions.qbk]
[include:error_reporting error_reporting.qbk]

[section:async Asynchronous model]
[include:headers headers/async.qbk]
[include:classes classes/handler_type.qbk]
[include:classes classes/async_result.qbk]
[include:classes classes/async_completion.qbk]
[endsect]

[section:basic_io_services Basic I/O services]
[include:headers headers/io_service.qbk]
[section:basic_io_services_requirements Requirements]
[include:requirements requirements/handler.qbk]
[include:requirements requirements/completion_handler.qbk]
[include:requirements requirements/service.qbk]
[include:requirements requirements/io_object_service.qbk]
[include:requirements requirements/thread_safety.qbk]
[include:requirements requirements/asynchronous_operations.qbk]
[endsect]
[include:classes classes/io_service.qbk]
[include:classes classes/io_service__service.qbk]
[include:classes classes/io_service__id.qbk]
[include:classes classes/io_service__work.qbk]
[include:classes classes/io_service__strand.qbk]
[include:functions functions/handler_hooks.qbk]
[include:classes classes/basic_io_object.qbk]
[endsect]

[section:timers Timers]
This subclause defines components for performing timer operations.
[std_example Performing a synchronous wait operation on a timer:
``
  io_service i;
  steady_timer t(i);
  t.expires_after(seconds(5));
  t.wait();
``]
[std_example Performing an asynchronous wait operation on a timer:
``
  void handler(error_code ec) { __dotdotdot__ }
  __dotdotdot__
  io_service i;
  steady_timer t(i);
  t.expires_after(seconds(5));
  t.async_wait(handler);
  i.run();
``]
[include:headers headers/timer.qbk]
[section:timers_requirements Requirements]
[include:requirements requirements/wait_traits.qbk]
[endsect]
[include:classes classes/wait_traits.qbk]
[include:classes classes/basic_waitable_timer.qbk]
[endsect]

[section:buffers Buffers]
[include:headers headers/buffer.qbk]
[section:buffers_requirements Requirements]
[include:requirements requirements/convertible_to_mutable_buffer.qbk]
[include:requirements requirements/mutable_buffers.qbk]
[include:requirements requirements/convertible_to_const_buffer.qbk]
[include:requirements requirements/const_buffers.qbk]
[include:requirements requirements/synchronous_read_operations.qbk]
[include:requirements requirements/asynchronous_read_operations.qbk]
[include:requirements requirements/synchronous_write_operations.qbk]
[include:requirements requirements/asynchronous_write_operations.qbk]
[include:requirements requirements/sync_read_stream.qbk]
[include:requirements requirements/async_read_stream.qbk]
[include:requirements requirements/sync_write_stream.qbk]
[include:requirements requirements/async_write_stream.qbk]
[endsect]
[include:classes classes/mutable_buffer.qbk]
[include:classes classes/const_buffer.qbk]
[include:classes classes/mutable_buffers_1.qbk]
[include:classes classes/const_buffers_1.qbk]
[include:classes classes/buffer_type_traits.qbk]
[include:functions functions/buffer_cast.qbk]
[include:functions functions/buffer_size.qbk]
[include:functions functions/buffer_copy.qbk]
[include:functions functions/buffer_arithmetic.qbk]
[include:functions functions/buffer.qbk]
[include:classes classes/basic_fifobuf.qbk]
[include:classes classes/transfer_all.qbk]
[include:classes classes/transfer_at_least.qbk]
[include:classes classes/transfer_exactly.qbk]
[include:functions functions/read.qbk]
[include:functions functions/async_read.qbk]
[include:functions functions/write.qbk]
[include:functions functions/async_write.qbk]
[include:functions functions/read_until.qbk]
[include:functions functions/async_read_until.qbk]
[endsect]

[section:sockets Sockets]
[include:headers headers/socket.qbk]
[section:sockets_requirements Requirements]
[include:requirements requirements/native_handles.qbk]
[include:requirements requirements/extensibility.qbk]
[include:requirements requirements/endpoint.qbk]
[include:requirements requirements/protocol.qbk]
[include:requirements requirements/gettable_socket_option.qbk]
[include:requirements requirements/settable_socket_option.qbk]
[include:requirements requirements/io_control_command.qbk]
[endsect]
[include:classes classes/socket_errc.qbk]
[include:classes classes/socket_base.qbk]
[include:classes classes/socket_base__bool_socket_options.qbk]
[include:classes classes/socket_base__int_socket_options.qbk]
[include:classes classes/socket_base__linger.qbk]
[include:classes classes/basic_socket.qbk]
[include:classes classes/basic_datagram_socket.qbk]
[include:classes classes/basic_stream_socket.qbk]
[include:classes classes/basic_socket_acceptor.qbk]
[endsect]

[section:socket_streams Socket streams]
[include:classes classes/basic_socket_streambuf.qbk]
[include:classes classes/basic_socket_iostream.qbk]
[endsect]

[include:functions functions/connect.qbk]
[include:functions functions/async_connect.qbk]

[section:internet_protocol Internet protocol]
[include:headers headers/internet.qbk]
[section:internet_protocol_requirements Requirements]
[include:requirements requirements/internet_protocol.qbk]
[endsect]
[include:classes classes/ip__resolver_errc.qbk]
[include:classes classes/ip__address.qbk]
[include:classes classes/ip__address_v4.qbk]
[include:classes classes/ip__address_v6.qbk]
[include:classes classes/ip__bad_address_cast.qbk]
[include:functions functions/ip__address_cast.qbk]
[include:classes classes/hash_ip.qbk]
[include:classes classes/ip__basic_endpoint.qbk]
[include:classes classes/ip__resolver_query_base.qbk]
[include:classes classes/ip__basic_resolver_entry.qbk]
[include:classes classes/ip__basic_resolver_iterator.qbk]
[include:classes classes/ip__basic_resolver_query.qbk]
[include:classes classes/ip__basic_resolver.qbk]
[include:functions functions/ip__host_name.qbk]
[include:classes classes/ip__tcp.qbk]
[include:classes classes/ip__tcp__no_delay.qbk]
[include:classes classes/ip__udp.qbk]
[include:classes classes/ip__v6_only.qbk]
[include:classes classes/ip__unicast__hops.qbk]
[include:classes classes/ip__multicast__group_socket_options.qbk]
[include:classes classes/ip__multicast__outbound_interface.qbk]
[include:classes classes/ip__multicast__hops.qbk]
[include:classes classes/ip__multicast__enable_loopback.qbk]
[endsect]

[endsect]

[/-----------------------------------------------------------------------------]

[section Open Issues]

* Impact of trapping signed char implementations on streambuf and iostream support.

* What nested namespaces should be used for the various components of the library.

[endsect]

[/-----------------------------------------------------------------------------]

[section Document History]

Paragraphs in the proposed text that have changed since N2054 are marked with
change bars. The main changes are:

* Try to clarify asynchronous operation requirements.

* Specify that synchronous operations should participate in thread cancellation.

* Clarify the behaviour of io_service::strand.

* Rename all member functions named `io_service()` to `get_io_service()`.

* Use `tie()` with `basic_socket_iostream<>` to synchronise input and output.

* Update error constants in conjunction with [N2174].

[endsect]

[/-----------------------------------------------------------------------------]

[section Acknowledgements]

The original ideas behind Boost.Asio were based on the work of Alexander
Libman, and were fleshed out in discussions with him over numerous lunches.

The first user of the library was Matthew Nourse, and over the past several
years he has provided much valuable feedback on both the library and this
proposal, and has been a not entirely unwilling accomplice in resolving many
design issues.

Beman Dawes encouraged and guided the development of this proposal. Review
feedback was also gratefully received from John Ky and Andrew Kohlhoff.

The library has received feedback in the form of comments, criticisms,
contributions, bug reports, suggestions and questions from more than 100
people. Many thanks to all concerned [mdash] it has all helped immensely in
bringing the interface to maturity. Significant contributions to the design,
rationale and implementation were made by Eugene Alterman, Stefan Arentz,
Christopher Baus, Dick Bridges, Vygintas Daugmaudis, Beman Dawes, Felipe Magno
de Almeida, Giovanni Deretta, Peter Dimov, Caleb Epstein, Jeff Garland, Ion
Gatza'''&#241;'''aga, Darryl Green, Dirk Griffioen, Indrek Juhani, Jarl Lindrud,
Jeremy Maitin-Shepard, Simon Meiklejohn, Cory Nelson, Arvid Norberg, Thorsten
Ottosen, Rene Rivera, Roland Schwarz, Andrew Schweitzer, Arkadiy Vertleyb,
Matthew Vogt, Pavel Vozenilek, and Theo Zourzouvillys. Not all of these people
agreed with the design choices that have ultimately been selected, but the
discussion they provoked was just as important in clarifying and solidifying
the thinking behind the design.

Finally, I would like to thank my wife Pauline, whose talents as a software
engineer were put to good use in talking through design problems. She also took
the time to meticulously read and review this proposal (except this bit).

[endsect]

[/-----------------------------------------------------------------------------]

[section References]

[#ref-POSIX] \[POSIX\] ['ISO/IEC 9945:2003], ['IEEE Std 1003.1-2001], and ['The
Open Group Base Specifications, Issue 6]. Also known as ['The Single Unix
Specification, Version 3].

[#ref-N1900] \[N1900\] Garland, Jeff,
['Proposal to Add Date-Time to the C++ Standard Library], 2006.
Updated by N2058.

[#ref-N1975] \[N1975\] Dawes, Beman,
['Filesystem Library Proposal for TR2 (Revision 3)], 2006.

[#ref-N2052] \[N2052\] Nelson, Clark and Boehm, Hans-J.,
['Sequencing and the Concurrency Memory Model], 2006.

[#ref-N2066] \[N2066\] Dawes, Beman,
['TR2 Diagnostics Enhancements], 2006.

[#ref-N2174] \[N2174\] Dawes, Beman,
['Diagnostics Enhancements for C++0x], 2007.

[#ref-ACE] \[ACE\] Schmidt, Douglas C.,
['ADAPTIVE Communication Environment],
[@http://www.cs.wustl.edu/~schmidt/ACE.html].

[#ref-SYMBIAN] \[SYMBIAN\] Symbian Ltd,
['Sockets Client],
[@http://www.symbian.com/developer/techlib/v70sdocs/doc_source/reference/cpp/SocketsClient/index.html].

[#ref-MS-NET] \[MS-NET\] Microsoft Corporation,
['.NET Framework Class Library, Socket Class],
[@http://msdn2.microsoft.com/en-us/library/system.net.sockets.socket.aspx].

[#ref-ES-API] \[ES-API\] The Interconnect Software Consortium / The Open Group,
['Extended Sockets API (ES-API), Issue 1.0], 2005,
[@http://opengroup.org/icsc/uploads/40/6415/ES_API_1_0.pdf].

[#ref-UNPV1] \[UNPV1\] Stevens, W. Richard,
['UNIX Network Programming, Volume 1, 2nd Edition], Prentice Hall, 1998.

[#ref-POSA2] \[POSA2\] Schmidt, Douglas C. et al,
['Pattern Oriented Software Architecture, Volume 2], Wiley, 2000.

[#ref-RFC821] \[RFC821\] Postel, J.,
['RFC 821: Simple Mail Transfer Protocol], 1982,
[@http://www.ietf.org/rfc/rfc0821.txt].

[#ref-RFC959] \[RFC959\] Postel, J. and Reynolds, J.,
['RFC 959: File Transfer Protocol (FTP)], 1985,
[@http://www.ietf.org/rfc/rfc0959.txt].

[#ref-RFC2616] \[RFC2616\] Fielding, R. et al,
['RFC 2616: Hypertext Transfer Protocol -- HTTP/1.1], 1999,
[@http://www.ietf.org/rfc/rfc2616.txt].

[#ref-RFC2732] \[RFC2732\] Hinden, R., Carpenter, B. and Masinter, L.,
['RFC 2732: Format for Literal IPv6 Addresses in URL's], 1999,
[@http://www.ietf.org/rfc/rfc2732.txt].

[#ref-RFC3513] \[RFC3513\] Hinden, R. and Deering, S.,
['RFC 3513: Internet Protocol Version 6 (IPv6) Addressing Architecture], 2003,
[@http://www.ietf.org/rfc/rfc3513.txt].

[endsect]
